// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

// TODO: get url from config
datasource db {
  provider = "mongodb"
  url      = "mongodb+srv://osovAdmin:rRTGwNDL7a@cluster0.3t8mxys.mongodb.net/onesatonevote"
}

// enum Role {
//   USER
//   ADMIN
//   SUPERADMIN
// }

model Campaign {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  // author   User @relation(fields: [authorEmail], references: [email])
  // authorEmail String
  author   User @relation(fields: [authorId], references: [id])
  authorId String @db.ObjectId
  title    String
  // creationDate DateTime @default(now())
  // updatedAt DateTime @updatedAt
  // xyz      String @unique @default(uuid())
}

// TODO: ajouter date of creation: creationDate: Timestamp
// TODO: tester uuid: myuuid String @default(uuid())
// TODO: define an index on something
// data DateTime @default("2020-03-19T14:21:00+02:00")
model User {
  id  String  @id @default(auto()) @map("_id") @db.ObjectId
  email   String  @unique
  name    String  @unique
  password String?
  // role    Role     @default(USER)
  campaigns Campaign[]
  // creationDate DateTime @default(now())
  // updatedAt DateTime @updatedAt
}




// model Post {
//   id       String    @id @default(auto()) @map("_id") @db.ObjectId
//   slug     String    @unique
//   title    String
//   body     String
//   author   User      @relation(fields: [authorId], references: [id])
//   authorId String    @db.ObjectId
//   comments Comment[]
// }

// model User {
//   id      String   @id @default(auto()) @map("_id") @db.ObjectId
//   email   String   @unique
//   name    String?
//   address Address?
//   posts   Post[]
// }

// model Comment {
//   id      String @id @default(auto()) @map("_id") @db.ObjectId
//   comment String
//   post    Post   @relation(fields: [postId], references: [id])
//   postId  String @db.ObjectId
// }

// Address is an embedded document
// type Address {
//   street String
//   city   String
//   state  String
//   zip    String
// }